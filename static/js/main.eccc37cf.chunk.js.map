{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","amountOfTabs","Math","ceil","tabs","className","classNames","disabled","href","onClick","map","tab","active","handlePageChange","App","useState","itemsPerPage","setItemsPerPage","setCurrentPage","secondItem","firstItem","getCorrectSecondItem","items","id","value","onChange","e","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAACC,GAC1C,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAEIC,EAAeC,KAAKC,KAAKN,EAAQC,GACjCM,EAAOf,EAAW,EAAGY,GAc3B,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,CACxB,aAAa,EACbC,SAA0B,IAAhBR,IAFZ,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAAgC,IAAhBT,EAChBU,QApBgB,WACtBT,EAAaD,EAAc,IAcvB,oBAUDK,EAAKM,KAAI,SAAAC,GAAG,OACX,oBACEN,UAAWC,IAAW,CACpB,aAAa,EACbM,OAAQb,IAAgBY,IAH5B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAzCM,SAACE,GACxBX,EAAaW,GAwCUE,CAAiBF,IAJlC,SAMGA,KAREA,MAYT,oBAAIN,UAAWC,IAAW,CACxB,aAAa,EACbC,SAAUR,IAAgBE,IAF5B,SAKE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAjDiB,WACvBT,EAAaD,EAAc,IA2CvB,wBCpEKe,EAAgB,WAC3B,IAEA,EAAwCC,mBADZ,GAC5B,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAsCF,mBAHX,GAG3B,mBAAOhB,EAAP,KAAoBmB,EAApB,KAMMC,EAAapB,EAAciB,EAC3BI,EAAYD,EAAaH,EAAe,EAExCK,EAAuBF,EAJf,MAI4CA,EAEpDG,EAAQjC,EAH8B,IAAd+B,EAAkBA,EAAY,EAAIA,EAGhBC,GAC7CX,KAAI,SAAAjB,GAAC,qBAAYA,MAOpB,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,oBAAGA,UAAU,OAAO,UAAQ,OAA5B,iBAEG,IACAN,EACA,IAJH,SAMG,IACAqB,EACA,IARH,IAUG,IACAC,EACA,IAZH,KAcG,IAhCO,GAkBV,OAmBA,sBAAKhB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOR,EACPS,SAnCW,SAACC,GACpBT,GAAiBS,EAAEC,OAAOH,OAC1BN,EAnByB,IA+CnB,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MA3DQ,GA4DRC,QAASkB,EACTjB,YAAaA,EACbC,aAlEe,SAAC6B,GACpBX,EAAeW,MAoEb,6BACGP,EAAMZ,KAAI,SAAAoB,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC9ElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.eccc37cf.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n}\n\nexport const Pagination: React.FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n  const amountOfTabs = Math.ceil(total / perPage);\n  const tabs = getNumbers(1, amountOfTabs);\n\n  const handlePageChange = (tab: number) => {\n    onPageChange(tab);\n  };\n\n  const handleLeftCLick = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  const handleRightClick = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames({\n        'page-item': true,\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={(currentPage === 1)}\n          onClick={handleLeftCLick}\n        >\n          «\n        </a>\n      </li>\n      {tabs.map(tab => (\n        <li\n          className={classNames({\n            'page-item': true,\n            active: currentPage === tab,\n          })}\n          key={tab}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${tab}`}\n            onClick={() => handlePageChange(tab)}\n          >\n            {tab}\n          </a>\n        </li>\n      ))}\n      <li className={classNames({\n        'page-item': true,\n        disabled: currentPage === amountOfTabs,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === amountOfTabs}\n          onClick={handleRightClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nexport const App: React.FC = () => {\n  const initialCurrentPage = 1;\n  const initialItemsPerPage = 5;\n  const [itemsPerPage, setItemsPerPage] = useState(initialItemsPerPage);\n  const [currentPage, setCurrentPage] = useState(initialCurrentPage);\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const total = 42;\n  const secondItem = currentPage * itemsPerPage;\n  const firstItem = secondItem - itemsPerPage + 1;\n  const getCorrectedFirstItem = firstItem === 0 ? firstItem + 1 : firstItem;\n  const getCorrectSecondItem = secondItem > total ? total : secondItem;\n\n  const items = getNumbers(getCorrectedFirstItem, getCorrectSecondItem)\n    .map(n => `Item ${n}`);\n\n  const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+e.target.value);\n    setCurrentPage(initialCurrentPage);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        Page\n        {' '}\n        {currentPage}\n        {' '}\n        (items\n        {' '}\n        {firstItem}\n        {' '}\n        -\n        {' '}\n        {getCorrectSecondItem}\n        {' '}\n        of\n        {' '}\n        {total}\n        )\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemsPerPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={itemsPerPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {items.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}